{"version":3,"sources":["components/Logout/Logout.jsx","shapes/LogoutShape.js","components/Authorization/Authorization.jsx","shapes/AuthorizationShape.js","data/places.csv","components/Point/Point.jsx","shapes/PointShape.js","components/Map/Map.jsx","api/getKey.js","App.jsx","index.jsx"],"names":["Logout","PropTypes","func","isRequired","exit","className","onClick","type","Authorization","memo","authorizationStatus","useState","login","setLogin","password","setPassword","inputError","setInputError","handleAuthorization","useCallback","event","preventDefault","inputHandler","target","value","name","onChange","placeholder","Point","arrayOf","string","marker","isOpen","setIsOpen","handleClick","position","lat","Number","lng","onCloseClick","containerStyle","width","height","center","Map","rows","setRows","useEffect","Papa","parse","places","download","complete","rowsFromFile","result","data","map","row","index","splice","googleMapsApiKey","mapContainerStyle","zoom","App","authorization","setAuthorization","ReactDOM","render","document","getElementById"],"mappings":"2TAIaA,GCDLC,IAAUC,KAAKC,WDCD,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACpB,qBAAKC,UAAU,SAAf,SACE,wBACEA,UAAU,iBACVC,QAAS,kBAAMF,GAAK,IACpBG,KAAK,SAHP,SAKE,6CEPOC,G,MCDUP,IAAUC,KAAKC,WDCTM,gBAAK,YAA8B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EACnCC,mBAAS,IAD0B,mBACtDC,EADsD,KAC/CC,EAD+C,OAE7BF,mBAAS,IAFoB,mBAEtDG,EAFsD,KAE5CC,EAF4C,OAGzBJ,oBAAS,GAHgB,mBAGtDK,EAHsD,KAG1CC,EAH0C,KAKvDC,EAAsBC,uBAAY,SAACC,GACvCA,EAAMC,iBAEQ,UAAVT,GAAkC,UAAbE,GACvBJ,GAAoB,GAGtBO,GAAc,KACb,CAACP,EAAqBE,EAAOE,IAE1BQ,EAAeH,uBAAY,SAACC,GAAW,IAAD,EAClBA,EAAMG,OAAtBC,EADkC,EAClCA,MAAOC,EAD2B,EAC3BA,KAEF,UAATA,GACFZ,EAASW,GAGE,aAATC,GACFV,EAAYS,GAGdP,GAAc,KACb,CAACF,EAAaF,IAEjB,OACE,sBAAKR,UAAU,gBAAf,UACE,uBACEA,UAAU,sBADZ,UAGE,uBACEA,UAAU,sBACVqB,SAAUJ,EACVf,KAAK,OACLkB,KAAK,QACLE,YAAY,UAGd,uBACEtB,UAAU,sBACVqB,SAAUJ,EACVf,KAAK,WACLkB,KAAK,WACLE,YAAY,aAEd,wBACEtB,UAAU,wBACVC,QAASY,EACTX,KAAK,SAHP,qBASDS,GACC,qBAAKX,UAAU,uBAAf,8C,wCE/DO,MAA0B,mCCK5BuB,G,MCFH3B,IAAU4B,QAAQ5B,IAAU6B,QAAQ3B,WDEzBM,gBAAK,YAAiB,IAAdsB,EAAa,EAAbA,OAAa,EACZpB,oBAAS,GADG,mBACjCqB,EADiC,KACzBC,EADyB,KAGlCC,EAAcf,uBAAY,WAC9Bc,GAAU,KACT,CAACA,IAEJ,OACE,gCACE,cAAC,IAAD,CACEE,SAAU,CACRC,IAAKC,OAAON,EAAO,IAAKO,IAAKD,OAAON,EAAO,KAE7CzB,QAAS4B,IAEVF,GACC,cAAC,IAAD,CACEO,aAAc,kBAAMN,GAAU,IAC9BE,SAAU,CACRC,IAAKC,OAAON,EAAO,IAAKO,IAAKD,OAAON,EAAO,KAH/C,SAME,sBAAK1B,UAAU,eAAf,UACE,qBAAKA,UAAU,gBAAf,+BACC0B,EAAO,GACR,qBAAK1B,UAAU,gBAAf,2BACC0B,EAAO,GACR,qBAAK1B,UAAU,gBAAf,4BACC0B,EAAO,GACR,qBAAK1B,UAAU,gBAAf,sBACC0B,EAAO,GACR,qBAAK1B,UAAU,gBAAf,uBACC0B,EAAO,GACR,qBAAK1B,UAAU,gBAAf,kBACC0B,EAAO,GACR,qBAAK1B,UAAU,gBAAf,gCACC0B,EAAO,GACR,qBAAK1B,UAAU,gBAAf,yBACC0B,EAAO,GACR,qBAAK1B,UAAU,gBAAf,8BACC0B,EAAO,gBErCdS,EAAiB,CACrBC,MAAO,QACPC,OAAQ,SAGJC,EAAS,CACbP,IAAK,SACLE,IAAK,WAGMM,EAAM,WAAO,IAAD,EACCjC,mBAAS,IADV,mBAChBkC,EADgB,KACVC,EADU,KAiBvB,OAdAC,qBAAU,WACRC,IAAKC,MAAMC,EAAQ,CACjBC,UAAU,EACVC,SAFiB,SAERC,GACP,IAAMC,EAASD,EAAaE,KAAKC,KAC/B,SAACC,EAAKC,GAAN,4BAAoBD,GAApB,CAAyBC,OAG3BJ,EAAOK,OAAO,EAAG,GACjBb,EAAQQ,QAGX,IAGD,8BACE,cAAC,IAAD,CACEM,iBCtC0B,0CDqC5B,SAGE,cAAC,IAAD,CACEC,kBAAmBrB,EACnBG,OAAQA,EACRmB,KAAM,EAHR,SAKGjB,EAAKW,KAAI,SAAAzB,GAAM,OACd,cAAC,EAAD,CAAwBA,OAAQA,GAApBA,EAAO,eExClBgC,EAAM,WAAO,IAAD,EACmBpD,oBAAS,GAD5B,mBAChBqD,EADgB,KACDC,EADC,KAGvB,OACE,gCACGD,GAAkB,cAAC,EAAD,CAAQ5D,KAAM6D,IAEhCD,EACG,cAAC,EAAD,IACC,cAAC,EAAD,CAAetD,oBAAqBuD,QCV/CC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ec5a8cc8.chunk.js","sourcesContent":["import React from 'react';\nimport './Logout.scss';\nimport { LogoutShape } from '../../shapes/LogoutShape';\n\nexport const Logout = ({ exit }) => (\n  <div className=\"logout\">\n    <button\n      className=\"logout__button\"\n      onClick={() => exit(false)}\n      type=\"button\"\n    >\n      <b>Logout</b>\n    </button>\n  </div>\n);\n\nLogout.propTypes = LogoutShape;\n","import PropTypes from 'prop-types';\n\nexport const LogoutShape = {\n  exit: PropTypes.func.isRequired,\n}.isRequired;\n","import React, { useState, memo, useCallback } from 'react';\nimport './Authorization.scss';\nimport { AuthorizationShape } from '../../shapes/AuthorizationShape';\n\nexport const Authorization = memo(({ authorizationStatus }) => {\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [inputError, setInputError] = useState(false);\n\n  const handleAuthorization = useCallback((event) => {\n    event.preventDefault();\n\n    if (login === 'admin' && password === 'admin') {\n      authorizationStatus(true);\n    }\n\n    setInputError(true);\n  }, [authorizationStatus, login, password]);\n\n  const inputHandler = useCallback((event) => {\n    const { value, name } = event.target;\n\n    if (name === 'Login') {\n      setLogin(value);\n    }\n\n    if (name === 'Password') {\n      setPassword(value);\n    }\n\n    setInputError(false);\n  }, [setPassword, setLogin]);\n\n  return (\n    <div className=\"authorization\">\n      <form\n        className=\"authorization__form\"\n      >\n        <input\n          className=\"authorization__item\"\n          onChange={inputHandler}\n          type=\"text\"\n          name=\"Login\"\n          placeholder=\"Login\"\n        />\n\n        <input\n          className=\"authorization__item\"\n          onChange={inputHandler}\n          type=\"password\"\n          name=\"Password\"\n          placeholder=\"Password\"\n        />\n        <button\n          className=\"authorization__button\"\n          onClick={handleAuthorization}\n          type=\"submit\"\n        >\n          Open\n        </button>\n      </form>\n\n      {inputError && (\n        <div className=\"authorization__error\">\n          Incorrectly entered data!\n        </div>\n      )}\n    </div>\n  );\n});\n\nAuthorization.propTypes = AuthorizationShape;\n","import PropTypes from 'prop-types';\n\nexport const AuthorizationShape = {\n  authorizationStatus: PropTypes.func.isRequired,\n}.isRequired;\n","export default __webpack_public_path__ + \"static/media/places.5218e25c.csv\";","import React, { useState, memo, useCallback } from 'react';\nimport './Point.scss';\nimport { Marker, InfoWindow } from '@react-google-maps/api';\nimport { PointShape } from '../../shapes/PointShape';\n\nexport const Point = memo(({ marker }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = useCallback(() => {\n    setIsOpen(true);\n  }, [setIsOpen]);\n\n  return (\n    <div>\n      <Marker\n        position={{\n          lat: Number(marker[3]), lng: Number(marker[4]),\n        }}\n        onClick={handleClick}\n      />\n      {isOpen && (\n        <InfoWindow\n          onCloseClick={() => setIsOpen(false)}\n          position={{\n            lat: Number(marker[3]), lng: Number(marker[4]),\n          }}\n        >\n          <div className=\"marker__info\">\n            <div className=\"marker__title\">Installation date</div>\n            {marker[0]}\n            <div className=\"marker__title\">Modified Date</div>\n            {marker[1]}\n            <div className=\"marker__title\">Account Number</div>\n            {marker[2]}\n            <div className=\"marker__title\">Latitude</div>\n            {marker[3]}\n            <div className=\"marker__title\">Longitude</div>\n            {marker[4]}\n            <div className=\"marker__title\">City</div>\n            {marker[5]}\n            <div className=\"marker__title\">ATE Installed Room</div>\n            {marker[8]}\n            <div className=\"marker__title\">Device Type</div>\n            {marker[9]}\n            <div className=\"marker__title\">Room Description</div>\n            {marker[10]}\n          </div>\n        </InfoWindow>\n      )}\n    </div>\n  );\n});\n\nPoint.propTypes = PointShape;\n","import PropTypes from 'prop-types';\n\nexport const PointShape = {\n  marker: PropTypes.arrayOf(PropTypes.string).isRequired,\n}.isRequired;\n","import React, { useEffect, useState } from 'react';\nimport './Map.scss';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport Papa from 'papaparse';\nimport places from '../../data/places.csv';\nimport { GOOGLE_MAP_API_KEY } from '../../api/getKey';\nimport { Point } from '../Point/Point';\n\nconst containerStyle = {\n  width: '100vw',\n  height: '100vh',\n};\n\nconst center = {\n  lat: 24.30578,\n  lng: 54.539402,\n};\n\nexport const Map = () => {\n  const [rows, setRows] = useState([]);\n\n  useEffect(() => {\n    Papa.parse(places, {\n      download: true,\n      complete(rowsFromFile) {\n        const result = rowsFromFile.data.map(\n          (row, index) => [...row, index],\n        );\n\n        result.splice(0, 1);\n        setRows(result);\n      },\n    });\n  }, []);\n\n  return (\n    <div>\n      <LoadScript\n        googleMapsApiKey={GOOGLE_MAP_API_KEY}\n      >\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          center={center}\n          zoom={7}\n        >\n          {rows.map(marker => (\n            <Point key={marker[11]} marker={marker} />\n          ))}\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n};\n","export const GOOGLE_MAP_API_KEY = 'AIzaSyCMhL1-eTdxyxnpRe9YfpNLlg-G7qMQLQE';\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Logout } from './components/Logout/Logout';\nimport { Authorization } from './components/Authorization/Authorization';\nimport { Map } from './components/Map/Map';\n\nexport const App = () => {\n  const [authorization, setAuthorization] = useState(false);\n\n  return (\n    <div>\n      {authorization && (<Logout exit={setAuthorization} />)}\n\n      {authorization\n        ? <Map />\n        : (<Authorization authorizationStatus={setAuthorization} />)}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}